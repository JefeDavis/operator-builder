// Copyright 2021 VMware, Inc.
// SPDX-License-Identifier: MIT

package common

import (
	"path/filepath"

	"sigs.k8s.io/kubebuilder/v3/pkg/machinery"
)

var _ machinery.Template = &Components{}

// Components scaffolds the interfaces between workloads.
type Components struct {
	machinery.TemplateMixin
	machinery.BoilerplateMixin

	IsStandalone bool
}

func (f *Components) SetTemplateDefaults() error {
	f.Path = filepath.Join("apis", "common", "components.go")

	f.TemplateBody = commonTemplate

	return nil
}

const commonTemplate = `
// +build !ignore_autogenerated

{{ .Boilerplate }}
package common

import (
	"context"

	"github.com/go-logr/logr"
	"k8s.io/apimachinery/pkg/runtime/schema"
	"sigs.k8s.io/controller-runtime/pkg/client"
	"sigs.k8s.io/controller-runtime/pkg/controller"
)

type Component interface {
	client.Object
	GetComponentGVK() schema.GroupVersionKind
	GetDependencies() []Component
	GetDependencyStatus() bool
	GetReadyStatus() bool
	GetPhaseConditions() []*PhaseCondition
	GetResources() []*Resource

	SetReadyStatus(bool)
	SetDependencyStatus(bool)
	SetPhaseCondition(*PhaseCondition)
	SetResource(*Resource)
}

type ComponentReconciler interface {
	client.Client
	// attribute exporters and setters
	GetComponent() Component
	GetContext() context.Context
	GetController() controller.Controller
	GetLogger() logr.Logger
	GetResources() ([]client.Object, error)
	GetWatches() []client.Object
	SetWatch(client.Object)

	// component and child resource methods
	CreateOrUpdate(client.Object) error

	// custom methods which are managed by consumers
	CheckReady() (bool, error)
	Mutate(client.Object) ([]client.Object, bool, error)
	Wait(client.Object) (bool, error)
}
`
